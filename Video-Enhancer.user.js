// ==UserScript==
// @name         Video Enhancer Android
// @namespace    https://yourdomain.com
// @version      1.2
// @description  H·ªó tr·ª£ tua nhanh, c·ª≠ ch·ªâ v√† kh√≥a m√†n h√¨nh tr√™n thi·∫øt b·ªã Android
// @author       Your Name
// @match        *://*/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    const video = document.querySelector('video');

    if (!video) return;

    // T·∫°o l·ªõp overlay
    const overlay = document.createElement('div');
    Object.assign(overlay.style, {
        position: 'fixed',
        top: 0,
        left: 0,
        width: '100%',
        height: '100%',
        zIndex: 1000,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        pointerEvents: 'none', // Kh√¥ng c·∫£n tr·ªü thao t√°c video
    });
    document.body.appendChild(overlay);

    // T·∫°o container cho c√°c n√∫t
    const buttonContainer = document.createElement('div');
    Object.assign(buttonContainer.style, {
        pointerEvents: 'auto', // Cho ph√©p nh·∫•n v√†o c√°c n√∫t
        backgroundColor: 'rgba(0, 0, 0, 0.6)',
        borderRadius: '10px',
        padding: '10px',
        display: 'flex',
        flexDirection: 'column',
    });
    overlay.appendChild(buttonContainer);

    // T·∫°o n√∫t v·ªõi ch·ª©c nƒÉng c·ª• th·ªÉ
    function createButton(text, onclick) {
        const btn = document.createElement('button');
        btn.innerText = text;
        btn.onclick = onclick;
        Object.assign(btn.style, {
            margin: '5px',
            padding: '10px',
            backgroundColor: 'white',
            color: 'black',
            border: 'none',
            borderRadius: '5px',
        });
        buttonContainer.appendChild(btn);
    }

    // N√∫t tua nhanh
    createButton('>> 10s', () => video.currentTime += 10);

    // N√∫t tua l√πi
    createButton('<< 10s', () => video.currentTime -= 10);

    // N√∫t kh√≥a m√†n h√¨nh
    let isLocked = false;
    const lockButton = createButton('üîí Kh√≥a', () => {
        isLocked = !isLocked;
        lockButton.innerText = isLocked ? 'üîì M·ªü kh√≥a' : 'üîí Kh√≥a';
    });

    // Kh√≥a c·ª≠ ch·ªâ khi m√†n h√¨nh b·ªã kh√≥a
    document.addEventListener('touchstart', (e) => {
        if (isLocked && !buttonContainer.contains(e.target)) e.preventDefault();
    }, { passive: false });

    // C·ª≠ ch·ªâ vu·ªët
    let startX = 0;
    document.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
    });

    document.addEventListener('touchend', (e) => {
        const endX = e.changedTouches[0].clientX;
        if (endX - startX > 50) {
            video.currentTime += 10; // Vu·ªët ph·∫£i ƒë·ªÉ tua nhanh
        } else if (startX - endX > 50) {
            video.currentTime -= 10; // Vu·ªët tr√°i ƒë·ªÉ tua l√πi
        }
    });

    // T·ª± ƒë·ªông ·∫©n n√∫t sau 10 gi√¢y
    let hideTimeout;
    const showButtons = () => {
        buttonContainer.style.display = 'flex';
        clearTimeout(hideTimeout);
        hideTimeout = setTimeout(() => buttonContainer.style.display = 'none', 10000);
    };

    document.addEventListener('touchstart', showButtons);
    showButtons();

    // ƒê·∫£m b·∫£o ho·∫°t ƒë·ªông ·ªü to√†n m√†n h√¨nh
    document.addEventListener('fullscreenchange', () => {
        if (document.fullscreenElement) {
            overlay.style.position = 'absolute';
        } else {
            overlay.style.position = 'fixed';
        }
    });
})();
